# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1
      with:
        fetch-depth: 1
        path: go/src/github.com/sonasingh46/github-actions

    # Check for go formatting
    - name: Enforce Go Formatting
      run: |
        ! go fmt ./... 2>&1 | read

  # This workflow contains a single job called "build"
  bdd:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1
        with:
          fetch-depth: 1
          path: go/src/github.com/sonasingh46/github-actions

      # Check for go formatting
      - name: Configure Minikube
        run: |
          chmod +x hack/minikube.sh
          ./hack/minikube.sh
          echo ${{ github.event.pull_request.head.sha }}
          echo ${{ github.event.pull_request.head.sha }}

      - name: Configure Kubectl
        run: |
          sudo chown -R $USER $HOME/.kube $HOME/.minikube
          echo "Get kubectl client and server version"
          kubectl version
          echo "Get the node"
          kubectl get node

      - name: Configure Kustomize
        run: |
          chmod +x hack/install_kustomize.sh
          ./hack/install_kustomize.sh /usr/local/bin/
          kustomize version

      - name: Create openebs namespace and install NDM
        run: |
          chmod +x hack/install_ndm.sh
          ./hack/install_ndm.sh
          echo "Applying customized ndm-operator YAML"
          kubectl create ns openebs
          kustomize build actions_ci/install_artifacts/ndm-operator | kubectl apply -f -
          kubectl get ds,deploy -n openebs




